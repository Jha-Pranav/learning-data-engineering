apiVersion: v1
kind: ConfigMap
metadata:
  name: data-store-env
data:
  folder: story

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: story-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: story-app
  template:
    metadata:
      labels:
        app: story-app
    spec:
      containers:
      - name: story-app-node
        image: jhapranav/story-app:3
        # env:
        # - name: VOLUME_FOLDER
        #   value: story 
        env:
          - name: VOLUME_FOLDER
            valueFrom:
              configMapKeyRef:
                name: data-store-env
                key: folder
          
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: app/story
            name: story-volumes
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: 8080
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
      volumes:
        - name: story-volumes
          # emptyDir: {}
          # hostPath:
          #   path: /data
          #   type: DirectoryOrCreate
          persistentVolumeClaim:
            claimName: host-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: host-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: standard
  hostPath:
    path: /data
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: host-pvc
spec:
  volumeName: host-pv
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
    
---
apiVersion: v1
kind: Service
metadata:
  name: story-service
spec:
  selector:
    app: story-app
  ports:
  - port: 80
    targetPort: 3000
